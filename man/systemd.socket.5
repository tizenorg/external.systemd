'\" t
.\"     Title: systemd.socket
.\"    Author: Lennart Poettering <lennart@poettering.net>
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 02/15/2012
.\"    Manual: systemd.socket
.\"    Source: systemd
.\"  Language: English
.\"
.TH "SYSTEMD\&.SOCKET" "5" "02/15/2012" "systemd" "systemd.socket"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.socket \- systemd socket configuration files
.SH "SYNOPSIS"
.PP
systemd\&.socket
.SH "DESCRIPTION"
.PP
A unit configuration file whose name ends in
\&.socket
encodes information about an IPC or network socket or a file system FIFO controlled and supervised by systemd, for socket\-based activation\&.
.PP
This man page lists the configuration options specific to this unit type\&. See
\fBsystemd.unit\fR(5)
for the common options of all unit configuration files\&. The common configuration items are configured in the generic [Unit] and [Install] sections\&. The socket specific configuration options are configured in the [Socket] section\&.
.PP
Additional options are listed in
\fBsystemd.exec\fR(5), which define the execution environment the
\fBExecStartPre=\fR,
\fBExecStartPost=\fR,
\fBExecStopPre=\fR
and
\fBExecStoptPost=\fR
commands are executed in\&.
.PP
For each socket file a matching service file (see
\fBsystemd.service\fR(5)
for details) must exist, describing the service to start on incoming traffic on the socket\&. Depending on the setting of
\fBAccept=\fR
(see below), this must either be named like the socket unit, but with the suffix replaced; or it must be a template file named the same way\&. Example: a socket file
foo\&.socket
needs a matching service
foo\&.service
if
\fBAccept=false\fR
is set\&. If
\fBAccept=true\fR
is set a service template file
foo@\&.service
must exist from which services are instantiated for each incoming connection\&.
.PP
Unless
\fIDefaultDependencies=\fR
is set to
\fBfalse\fR, socket units will implicitly have dependencies of type
\fIRequires=\fR
and
\fIAfter=\fR
on
sysinit\&.target
as well as dependencies of type
\fIConflicts=\fR
and
\fIBefore=\fR
on
shutdown\&.target\&. These ensure that socket units pull in basic system initialization, and are terminated cleanly prior to system shutdown\&. Only sockets involved with early boot or late system shutdown should disable this option\&.
.PP
Socket units may be used to implement on\-demand starting of services, as well as parallelized starting of services\&.
.PP
Note that the daemon software configured for socket activation with socket units needs to be able to accept sockets from systemd, either via systemd\*(Aqs native socket passing interface (see
\fBsd_listen_fds\fR(3)
for details) or via the traditional
\fBinetd\fR(8)\-style socket passing (i\&.e\&. sockets passed in via STDIN and STDOUT, using
\fIStandardInput=socket\fR
in the service file)\&.
.SH "OPTIONS"
.PP
Socket files must include a [Socket] section, which carries information about the socket or FIFO it supervises\&. A number of options that may be used in this section are shared with other unit types\&. These options are documented in
\fBsystemd.exec\fR(5)\&. The options specific to the [Socket] section of socket units are the following:
.PP
\fIListenStream=\fR, \fIListenDatagram=\fR, \fIListenSequentialPacket=\fR
.RS 4
Specifies an address to listen on for a stream (SOCK_STREAM), datagram (SOCK_DGRAM) resp\&. sequential packet (SOCK_SEQPACKET) socket\&. The address can be written in various formats:
.sp
If the address starts with a slash (/), it is read as file system socket in the AF_UNIX socket family\&.
.sp
If the address starts with an at symbol (@) it is read as abstract namespace socket in the AF_UNIX family\&. The @ is replaced with a NUL character before binding\&. For details see
\fBunix\fR(7)\&.
.sp
If the address string is a single number it is read as port number to listen on for both IPv4 and IPv6\&.
.sp
If the address string is a string in the format v\&.w\&.x\&.y:z it is read as IPv4 specifier for listening on an address v\&.w\&.x\&.y on a port z\&.
.sp
If the address string is a string in the format [x]:y it is read as IPv6 address x on a port y\&.
.sp
Note that SOCK_SEQPACKET (i\&.e\&.
\fIListenSequentialPacket=\fR) is only available for AF_UNIX sockets\&. SOCK_STREAM (i\&.e\&.
\fIListenStream=\fR) when used for IP sockets refers to TCP sockets, SOCK_DGRAM (i\&.e\&.
\fIListenDatagram=\fR) to UDP\&.
.sp
These options may be specified more than once in which case incoming traffic on any of the sockets will trigger service activation, and all listed sockets will be passed to the service, regardless whether there is incoming traffic on them or not\&.
.sp
If an IP address is used here, it is often desirable to listen on it before the interface it is configured on is up and running, and even regardless whether it will be up and running ever at all\&. To deal with this it is recommended to set the
\fIFreeBind=\fR
option described below\&.
.RE
.PP
\fIListenFIFO=\fR
.RS 4
Specifies a file system FIFO to listen on\&. This expects an absolute file system path as argument\&. Behaviour otherwise is very similar to the
\fIListenDatagram=\fR
directive above\&.
.RE
.PP
\fIListenSpecial=\fR
.RS 4
Specifies a special file in the file system to listen on\&. This expects an absolute file system path as argument\&. Behaviour otherwise is very similar to the
\fIListenFIFO=\fR
directive above\&. Use this to open character device nodes as well as special files in
/proc
and
/sys\&.
.RE
.PP
\fIListenNetlink=\fR
.RS 4
Specifies a Netlink family to create a socket for to listen on\&. This expects a short string referring to the AF_NETLINK family name (such as
\fIaudit\fR
or
\fIkobject\-uevent\fR) as argument, optionally suffixed by a whitespace followed by a multicast group integer\&. Behaviour otherwise is very similar to the
\fIListenDatagram=\fR
directive above\&.
.RE
.PP
\fIListenMessageQueue=\fR
.RS 4
Specifies a POSIX message queue name to listen on\&. This expects a valid message queue name (i\&.e\&. beginning with /)\&. Behaviour otherwise is very similar to the
\fIListenFIFO=\fR
directive above\&. On Linux message queue descriptors are actually file descriptors and can be inherited between processes\&.
.RE
.PP
\fIBindIPv6Only=\fR
.RS 4
Takes a one of
\fBdefault\fR,
\fBboth\fR
or
\fBipv6\-only\fR\&. Controls the IPV6_V6ONLY socket option (see
\fBipv6\fR(7)
for details)\&. If
\fBboth\fR, IPv6 sockets bound will be accessible via both IPv4 and IPv6\&. If
\fBipv6\-only\fR, they will be accessible via IPv6 only\&. If
\fBdefault\fR
(which is the default, surprise!) the system wide default setting is used, as controlled by
/proc/sys/net/ipv6/bindv6only\&.
.RE
.PP
\fIBacklog=\fR
.RS 4
Takes an unsigned integer argument\&. Specifies the number of connections to queue that have not been accepted yet\&. This setting matters only for stream and sequential packet sockets\&. See
\fBlisten\fR(2)
for details\&. Defaults to SOMAXCONN (128)\&.
.RE
.PP
\fIBindToDevice=\fR
.RS 4
Specifies a network interface name to bind this socket to\&. If set traffic will only be accepted from the specified network interfaces\&. This controls the SO_BINDTODEVICE socket option (see
\fBsocket\fR(7)
for details)\&. If this option is used, an automatic dependency from this socket unit on the network interface device unit (\fBsystemd.device\fR(5)
is created\&.
.RE
.PP
\fIDirectoryMode=\fR
.RS 4
If listening on a file system socket of FIFO, the parent directories are automatically created if needed\&. This option specifies the file system access mode used when creating these directories\&. Takes an access mode in octal notation\&. Defaults to 0755\&.
.RE
.PP
\fISocketMode=\fR
.RS 4
If listening on a file system socket of FIFO, this option specifies the file system access mode used when creating the file node\&. Takes an access mode in octal notation\&. Defaults to 0666\&.
.RE
.PP
\fIAccept=\fR
.RS 4
Takes a boolean argument\&. If true, a service instance is spawned for each incoming connection and only the connection socket is passed to it\&. If false, all listening sockets themselves are passed to the started service unit, and only one service unit is spawned for all connections (also see above)\&. This value is ignored for datagram sockets and FIFOs where a single service unit unconditionally handles all incoming traffic\&. Defaults to
\fBfalse\fR\&. For performance reasons, it is recommended to write new daemons only in a way that is suitable for
\fBAccept=false\fR\&. This option is mostly useful to allow daemons designed for usage with
\fBinetd\fR(8), to work unmodified with systemd socket activation\&.
.RE
.PP
\fIMaxConnections=\fR
.RS 4
The maximum number of connections to simultaneously run services instances for, when
\fBAccept=true\fR
is set\&. If more concurrent connections are coming in, they will be refused until at least one existing connection is terminated\&. This setting has no effect for sockets configured with
\fBAccept=no\fR
or datagram sockets\&. Defaults to 64\&.
.RE
.PP
\fIKeepAlive=\fR
.RS 4
Takes a boolean argument\&. If true, the TCP/IP stack will send a keep alive message after 2h (depending on the configuration of
/proc/sys/net/ipv4/tcp_keepalive_time) for all TCP streams accepted on this socket\&. This controls the SO_KEEPALIVE socket option (see
\fBsocket\fR(7)
and the
\m[blue]\fBTCP Keepalive HOWTO\fR\m[]\&\s-2\u[1]\d\s+2
for details\&.) Defaults to
\fBfalse\fR\&.
.RE
.PP
\fIPriority=\fR
.RS 4
Takes an integer argument controlling the priority for all traffic sent from this socket\&. This controls the SO_PRIORITY socket option (see
\fBsocket\fR(7)
for details\&.)\&.
.RE
.PP
\fIReceiveBuffer=\fR, \fISendBuffer=\fR
.RS 4
Takes an integer argument controlling the receive resp\&. send buffer sizes of this socket\&. This controls the SO_RCVBUF resp\&. SO_SNDBUF socket options (see
\fBsocket\fR(7)
for details\&.)\&.
.RE
.PP
\fIIPTOS=\fR
.RS 4
Takes an integer argument controlling the IP Type\-Of\-Service field for packets generated from this socket\&. This controls the IP_TOS socket option (see
\fBip\fR(7)
for details\&.)\&. Either a numeric string or one of
\fBlow\-delay\fR,
\fBthroughput\fR,
\fBreliability\fR
or
\fBlow\-cost\fR
may be specified\&.
.RE
.PP
\fIIPTTL=\fR
.RS 4
Takes an integer argument controlling the IPv4 Time\-To\-Live/IPv6 Hop\-Count field for packets generated from this socket\&. This sets the IP_TTL/IPV6_UNICAST_HOPS socket options (see
\fBip\fR(7)
and
\fBipv6\fR(7)
for details\&.)
.RE
.PP
\fIMark=\fR
.RS 4
Takes an integer value\&. Controls the firewall mark of packets generated by this socket\&. This can be used in the firewall logic to filter packets from this socket\&. This sets the SO_MARK socket option\&. See
\fBiptables\fR(8)
for details\&.
.RE
.PP
\fIPipeSize=\fR
.RS 4
Takes an integer value\&. Controls the pipe buffer size of FIFOs configured in this socket unit\&. See
\fBfcntl\fR(2)
for details\&.
.RE
.PP
\fIMessageQueueMaxMessages=\fR, \fIMessageQueueMessageSize=\fR
.RS 4
These two settings take integer values and control the mq_maxmsg resp\&. mq_msgsize field when creating the message queue\&. Note that either none or both of these variables need to be set\&. See
\fBmq_setattr\fR(3)
for details\&.
.RE
.PP
\fIFreeBind=\fR
.RS 4
Takes a boolean value\&. Controls whether the socket can be bound to non\-local IP addresses\&. This is useful to configure sockets listening on specific IP addresses before those IP addresses are successfully configured on a network interface\&. This sets the IP_FREEBIND socket option\&. For robustness reasons it is recommended to use this option whenever you bind a socket to a specific IP address\&. Defaults to
\fBfalse\fR\&.
.RE
.PP
\fITransparent=\fR
.RS 4
Takes a boolean value\&. Controls the IP_TRANSPARENT socket option\&. Defaults to
\fBfalse\fR\&.
.RE
.PP
\fIBroadcast=\fR
.RS 4
Takes a boolean value\&. This controls the SO_BROADCAST socket option, which allows broadcast datagrams to be sent from this socket\&. Defaults to
\fBfalse\fR\&.
.RE
.PP
\fIPassCredentials=\fR
.RS 4
Takes a boolean value\&. This controls the SO_PASSCRED socket option, which allows UNIX sockets to receive the credentials of the sending process in an ancillary message\&. Defaults to
\fBfalse\fR\&.
.RE
.PP
\fITCPCongestion=\fR
.RS 4
Takes a string value\&. Controls the TCP congestion algorithm used by this socket\&. Should be one of "westwood", "veno", "cubic", "lp" or any other available algorithm supported by the IP stack\&. This setting applies only to stream sockets\&.
.RE
.PP
\fIExecStartPre=\fR, \fIExecStartPost=\fR
.RS 4
Takes one or more command lines, which are executed before (resp\&. after) the listening sockets/FIFOs are created and bound\&. The first token of the command line must be an absolute file name, then followed by arguments for the process\&. Multiple command lines may be specified following the same scheme as used for
\fIExecStartPre=\fR
of service unit files\&.
.RE
.PP
\fIExecStopPre=\fR, \fIExecStopPost=\fR
.RS 4
Additional commands that are executed before (resp\&. after) the listening sockets/FIFOs are closed and removed\&. Multiple command lines may be specified following the same scheme as used for
\fIExecStartPre=\fR
of service unit files\&.
.RE
.PP
\fITimeoutSec=\fR
.RS 4
Configures the time to wait for the commands specified in
\fIExecStartPre=\fR,
\fIExecStartPost=\fR,
\fIExecStopPre=\fR
and
\fIExecStopPost=\fR
to finish\&. If a command does not exit within the configured time, the socket will be considered failed and be shut down again\&. All commands still running, will be terminated forcibly via SIGTERM, and after another delay of this time with SIGKILL\&. (See
\fBKillMode=\fR
below\&.) Takes a unit\-less value in seconds, or a time span value such as "5min 20s"\&. Pass 0 to disable the timeout logic\&. Defaults to 90s\&.
.RE
.PP
\fIKillMode=\fR
.RS 4
Specifies how processes of this socket unit shall be killed\&. One of
\fBcontrol\-group\fR,
\fBprocess\fR,
\fBnone\fR\&.
.sp
This option is mostly equivalent to the
\fBKillMode=\fR
option of service files\&. See
\fBsystemd.service\fR(5)
for details\&.
.RE
.PP
\fIKillSignal=\fR
.RS 4
Specifies which signal to use when killing a process of this socket\&. Defaults to SIGTERM\&.
.RE
.PP
\fISendSIGKILL=\fR
.RS 4
Specifies whether to send SIGKILL to remaining processes after a timeout, if the normal shutdown procedure left processes of the socket around\&. Takes a boolean value\&. Defaults to "yes"\&.
.RE
.PP
\fIService=\fR
.RS 4
Specifies the service unit name to activate on incoming traffic\&. This defaults to the service that bears the same name as the socket (ignoring the different suffixes)\&. In most cases it should not be necessary to use this option\&.
.RE
.SH "SEE ALSO"
.PP

\fBsystemd\fR(1),
\fBsystemctl\fR(8),
\fBsystemd.unit\fR(5),
\fBsystemd.exec\fR(5),
\fBsystemd.service\fR(5)
.SH "AUTHOR"
.PP
\fBLennart Poettering\fR <\&lennart@poettering\&.net\&>
.RS 4
Developer
.RE
.SH "NOTES"
.IP " 1." 4
TCP Keepalive HOWTO
.RS 4
\%http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/
.RE
