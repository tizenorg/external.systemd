Bugfixes:

* swap units that are activated by one name but shown in the kernel under another are semi-broken

* NM should pull in network.target (PENDING)
  https://bugzilla.redhat.com/show_bug.cgi?id=692008

* make anaconda write timeout=0 for encrypted devices

* service: pid file reading after reload doesn't work, since we don't reset the pid variable

* make sure timeouts are applied to Type=oneshot services.

* Dangling symlinks of .automount unit files in .wants/ directories, set up
  automount points even when the original .automount file did not exist
  anymore. Only the .mount unit was still around.

* make polkit checks async

* properly handle .mount unit state tracking when two mount points are stacked one on top of another on the exact same mount point.

Features:

* systemctl reboot -ff should trigger an immediate reboot

* support units generated by a generator and placed in /run/systemd/system/; the directory is
  currently ignored because it is empty before the generatores are executed

* let 'systemctl reboot' called as non-root talk to logind instead of systemd, to get polkit
  system policy in the loop of privilege checking, so normal users can possibly use /sbin/reboot

* Possibly, detect whether SysV init scripts can do reloading by looking for "echo Usage:" lines

* figure out whether we should leave dbus around during shutdown

* support closing all fds via RLIMIT_NOFILE instead of /proc, in order to make chroot stuff work.

* add interface to allow immediate rotation of the journal, and even flushing.

* don't log coredumps of PID 1 into the journal

* if a journal file is corrupt, rotate it and create a new one

* dbus: in fedora, make the machine a symlink to /etc/machine-id

* journald: reuse XZ context

* logind: add equivalent to sd_pid_get_owner_uid() to the D-Bus API

* write RPM spec macros for presets

* write man pages for systemd-cat

* journal: write man pages for API

* journal: OR matches are borked

* journal: extend hash tables as we go

* journal: API for looking for retrieving "all values of this field"

* journal: deal nicely with byte-by-byte copied files, especially regards header

* journal: local deserializer of export mode, http server

* journal: message catalog

* journal: forward-secure signatures

* document the exit codes when services fail before they are exec()ed

* rework namespace support, don't use pivot_root, and mount things after creating the namespace, not before

* systemctl journal command

* journalctl: --cursor support, priority filtering

* systemctl status: show coredumps

* systemctl status: show whether journal was rotated since service started

* save coredump in Windows/Mozilla minidump format

* support crash reporting operation modes (https://live.gnome.org/GnomeOS/Design/Whiteboards/ProblemReporting)

* allow per-entry control on /var vs. /run (think incognito browser mode)

* clean up session cgroups that remain after logout (think sshd), but eventually run empty

* support "systemctl stop foobar@.service" to stop all units matching a certain template

* move to LGPL2+

* logind: allow showing logout dialog from system

* document that %% can be used to write % in a string that is specifier extended

* check utf8 everywhere

* when an instanced service exits, remove its parent cgroup too if possible.

* Make libselinux, libattr, libcap, libdl dependencies only of the tools which actually need them.

* as Tom Gundersen pointed out there's a always a dep loop if people use crypto file systems with random keys

* unset container= in PID1?

* automatically escape unit names passed on the service (i.e. think "systemctl start serial-getty.service@serial/by-path/jshdfjsdfhkjh" being automatically escaped as necessary.

* if we can not get user quota for tmpfs, mount a separate tmpfs instance
  for every user in /run/user/$USER with a configured maximum size

* default to actual 32bit PIDs, via /proc/sys/kernel/pid_max

* add an option to make mounts private/shareable and so on, enable this for root by default

* internal restart counter for units (focus on auto-respawn)

* finer-grained auto-respawn settings (rate-limit)

* be able to specify a forced restart of service A where service B depends on, in case B
  needs to be auto-respawned?

* Something is wrong with symlink handling of "autovt@.service" in "systemctl list-unit-files"

* when a bus name of a service disappears from the bus make sure to queue further activation requests

* something like ConditionExec= or ExecStartPre= without failure state

* service restart retry configuration

* tmpfiles: apply "x" on "D" too (see patch from William Douglas)

* don't set $HOME in services unless requested

* hide PAM/TCPWrap options in fragment parser when compile time disabled

* when we automatically restart a service, ensure we retsart its rdeps, too.

* allow Type=simple with PIDFile=
  https://bugzilla.redhat.com/show_bug.cgi?id=723942

* move PAM code into its own binary

* warn if the user stops a service but not its associated socket

* logind: spawn user@..service on login

* logind: non-local X11 server handling

* implement Register= switch in .socket units to enable registration
  in Avahi, RPC and other socket registration services.

* make sure systemd-ask-password-wall does not shutdown systemd-ask-password-console too early

* readahead: use BTRFS_IOC_DEFRAG_RANGE instead of BTRFS_IOC_DEFRAG ioctl, with START_IO

* readahead: check whether a btrfs volume includes ssd by checking mount flag "ssd"

* support sd_notify() style notification when reload begins (RELOADING=1), reload is finished (READY=1), and add ReloadSignal= then to use in combination

* support sd_notify() style notification when shutting down, to make auto-exit bus services work (STOPPING=1)

* verify that the AF_UNIX sockets of a service in the fs still exist
  when we start a service in order to avoid confusion when a user
  assumes starting a service is enough to make it accessible

* Make it possible to set the keymap independently from the font on
  the kernel cmdline. Right now setting one resets also the other.

* move nss-myhostname into systemd

* and a dbus call to generate target from current state

* drop /.readahead on bigger upgrades with yum

* add inode nr check to readahead to suppress preloading changed files

* add support for /bin/mount -s

* GC unreferenced jobs (such as .device jobs)

* when failing to start a service due to ratelimiting, try again later, if restart=always is set

* write blog stories about:
  - enabling dbus services
  - status update
  - how to make changes to sysctl and sysfs attributes
  - remote access
  - how to pass throw-away units to systemd, or dynamically change properties of existing units
  - how to integrate cgconfig and suchlike with systemd
  - resource control in systemd

* allow port=0 in .socket units

* move readahead files into /var, look for them with .path units

* teach dbus to activate all services it finds in /etc/systemd/services/org-*.service

* support systemd.mask= on the kernel command line.

* when key file cannot be found, read it from kbd in cryptsetup

* reuse mkdtemp namespace dirs in /tmp?

* recreate systemd's D-Bus private socket file on SIGUSR2

* Support --test based on current system state

* investigate whether the gnome pty helper should be moved into systemd, to provide cgroup support.

* maybe introduce ExecRestartPre=

* configurable jitter for timer events

* timer events with system resume

* timer events on calendar time

* dot output for --test showing the 'initial transaction'

* calendar time support in timer, iCalendar semantics for the timer stuff (RFC2445)
    http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=99ee5315dac6211e972fa3f23bcc9a0343ff58c4

* implicitly import "defaults" settings file into all types
* exec settings override
* writable cgroups dbus properties for live changes

* read config fragments for all units from /lib/systemd/system/foobar.service.d/ to override/extend specific settings

* port over to LISTEN_FDS/LISTEN_PID:
   - rpcbind (/var/run/rpcbind.sock!) HAVEPATCH
   - cups     HAVEPATCH
   - postfix, saslauthd
   - apache/samba
   - libvirtd (/var/run/libvirt/libvirt-sock-ro)
   - bluetoothd (/var/run/sdp! @/org/bluez/audio!)
   - distccd

* auditd service files

* fingerprint.target, wireless.target, gps.target, netdevice.target

* io priority during initialization

* if a service fails too often, make the service enter failed mode, and the socket, too.

* systemctl list-jobs - show dependencies

* add systemctl switch to dump transaction without executing it

* suspend, resume support?

* drop cap bounding set in readahead and other services

External:

* dbus:
   - get process transport into dbus for systemctl -P/-H (PENDING)
   - dbus --user
   - natively watch for dbus-*.service symlinks (PENDING)
   - allow specification of socket mode/umask when allocating DBusServer
   - allow disabling of fd passing when connecting a AF_UNIX connection
   - allow disabling of UID passing for AUTH EXTERNAL

* systemd --user
    PR_SET_CHILD_REAPER patch: https://lkml.org/lkml/2011/7/28/426

* fix alsa mixer restore to not print error when no config is stored

* udisks should not use udisks-part-id, instead use blkid. also not probe /dev/loopxxx

* snd-seq should go, https://bugzilla.redhat.com/show_bug.cgi?id=676095

* gnome-shell python script/glxinfo/is-accelerated must die

* make cryptsetup lower --iter-time

* patch kernel for xattr support in /dev, /proc/, /sys and /sys/fs/cgroup?

* NTP: the kernel's 11-minutes-mode syncs the system time to the RTC, but only
  in an ~30 minutes window. It does not adjust larger differences. Find a way
  to tell the kernel, to always do a full time sync when the RTC is in UTC and
  we are in 11-minutes-mode. When we trust the system time to NTP we also want
  the RTC to sync up.

* patch kernel for cpu feature modalias for autoloading aes/kvm/...
    (patches in linux-next, on the way to the next kernel)

* kernel: add /proc/sys file exposing CAP_LAST_CAP? sysconf?
    merged: http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=commit;h=73efc0394e148d0e15583e13712637831f926720

* kernel: add device_type = "fb", "fbcon" to class "graphics"

Regularly:

* look for close() vs. close_nointr() vs. close_nointr_nofail()

* check for strerror(r) instead of strerror(-r)

* Use PR_SET_PROCTITLE_AREA if it becomes available in the kernel

* %m in printf() instead of strerror();

* pahole

* set_put(), hashmap_put() return values check. i.e. == 0 doesn't free()!
